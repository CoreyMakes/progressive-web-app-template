doctype html
//if lte IE 6
  html.preIE7.preIE8.preIE9
//if IE 7
  html.preIE8.preIE9
//if IE 8
  html.preIE9
// [if gte IE 9] <!
html
  // <![endif]
  head
    meta(charset='UTF-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
    meta(name='viewport', content='width=device-width,initial-scale=1')
    title Offline- Progressive Web App Template
    meta(name='author', content='Teamwork.com')
    meta(name='description', content='A starting point to get you started with creating or converting your existing website/webapp into a Progressive Web App. Includes a service worker template.')
    meta(name='keywords', content='pwa,service worker,Progressive Web App')
    link(rel='shortcut icon', href='assets/img/favicon.ico', type='image/vnd.microsoft.icon')
    link(rel='manifest', href='/manifest.json')
    link(rel="stylesheet",href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css")
    link(rel='stylesheet', href='http://fezvrasta.github.io/bootstrap-material-design/dist/css/bootstrap-material-design.css', type='text/css')
    script(type='text/javascript').
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-XXXXXXXX-Y']);
      _gaq.push(['_trackPageview']);
      (function()
      {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
  body
    a(href='https://github.com/Teamwork/progressive-web-app-template')
        img(style='position: absolute; top: 0; right: 0; border: 0;', src='https://camo.githubusercontent.com/e7bbb0521b397edbd5fe43e7f760759336b5e05f/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677265656e5f3030373230302e706e67', alt='Fork me on GitHub', data-canonical-src='https://s3.amazonaws.com/github/ribbons/forkme_right_green_007200.png')
    .container-fluid.baseheader
        .row
            .col-md-2
            .col-md-8
                img(src="./assets/img/logo.png",width="100%")

                .bs-component(style="margin-top: 65px;")
                    .panel.panel-default
                        .panel-heading OFFLINE!!!!! It works
                        .panel-body
                            p
                                | A starting point to get you started with creating or converting your existing website/webapp into a Progressive Web App. Includes a service worker template.
                    .panel.panel-default
                        .panel-heading 1. Create a mainfest.json file
                        .panel-body
                            p
                                | A full example of all this is seen
                                a(herf='https://github.com/Teamwork/progressive-web-app-template', alt='') here
                            p
                                | Remember the mainfest.json and serverworker.js need to be at the root.


                    .panel.panel-default
                        .panel-heading 2. Add the manifest.json
                        .panel-body
                            | Add the manifest.json reference to the index.html file’s head tag:
                            | <link rel="manifest" href="./manifest.json">
                    .panel.panel-default
                        .panel-heading 3. Add a Service Worker
                        .panel-body
                            p
                                | To get started with service workers, you first need to create a service worker’s JavaScript file. Will be placed in the root. 
                                | You can see one
                                a(herf='https://github.com/Teamwork/progressive-web-app-template', alt='') here
                    .panel.panel-default
                        .panel-heading 4. Now register the service worker
                        .panel-body
                            p
                                | You can add this file to load event in your javascript of html.
                                | You can see one
                                a(herf='https://github.com/Teamwork/progressive-web-app-template', alt='') here
                    .panel.panel-default
                        .panel-heading 5. Now reload
                        .panel-body
                            | You could see in the network tab. The Service worker is taking care of loading of the assets.
                            | Pssss also it works offline. Disable the wifi and refresh

            .col-md-2
    script(src='//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js', type='text/javascript')
    script(src='//ajax.googleapis.com/ajax/libs/jqueryui/1.8.21/jquery-ui.min.js', type='text/javascript')
    script(src='//ajax.googleapis.com/ajax/libs/angularjs/1.2.25/angular.min.js', type='text/javascript')
    script(src='//cdnjs.cloudflare.com/ajax/libs/modernizr/2.5.3/modernizr.min.js', type='text/javascript')
    script(src='http://fezvrasta.github.io/bootstrap-material-design/dist/js/material.min.js', type='text/javascript')
    script(type='text/javascript').
      function autorun()
      {

        var ServiceWorker;

        ServiceWorker = (function() {

            function ServiceWorker() {

            if ('serviceWorker' in navigator) {
                navigator.serviceWorker.register('./serviceWorker.js').then((function(_this) {
                return function(registration) {
                    if (registration.installing) {
                    console.log('Service worker installing');
                    } else if (registration.waiting) {
                    console.log('Service worker installed');
                    } else if (registration.active) {
                    console.log('Service worker active');
                    console.log(registration);
                    console.log('Service Worker Registered');
                    _this.subscribe(registration);
                    }
                };
                })(this))["catch"](function(err) {
                console.log('Service Worker Failed to Register', err);
                });
            }
            return;
            }

            ServiceWorker.prototype.unsubscribe = function(serviceWorkerReg) {
            if ('serviceWorker' in navigator) {
                serviceWorkerReg.pushManager.getSubscription().then(function(subscription) {
                subscription.unsubscribe();
                });
            }
            };

            ServiceWorker.prototype.subscribe = function(serviceWorkerReg) {
            if ('serviceWorker' in navigator) {
                serviceWorkerReg.pushManager.subscribe({
                userVisibleOnly: true
                }).then(function(subscription) {});
                return;
            }
            };

            return ServiceWorker;

        })();
        return new ServiceWorker();

      }
      if (window.addEventListener) window.addEventListener("load", autorun, false);
      else if (window.attachEvent) window.attachEvent("onload", autorun);
      else window.onload = autorun;
